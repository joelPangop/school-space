name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch: 

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: Abc123...
          MYSQL_DATABASE: studentdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
 

      - name: Build JAR
        working-directory: school-space-services
        run: mvn clean package -DskipTests
        
      - name: Build and run tests
        working-directory: school-space-services
        run: mvn test -Dspring.profiles.active=test -Dspring.datasource.driver-class-name=org.h2.Driver

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Make mvnw executable
        run: chmod +x ./school-space-services/mvnw

      - name: Build JAR file
        working-directory: ./school-space-services
        run: ./mvnw clean package -DskipTests

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./school-space-services
          file: ./school-space-services/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/schoolspaceservices:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./school-space-client
          file: ./school-space-client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/schoolspaceclient:latest
          
  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v3

      - name: ‚öñÔ∏è Set up SSH for EC2
        uses:  webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.EC2_SSH_KEY_B64 }}

      - name: üöÄ Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd /home/ec2-user/school-space
            chmod +x docker-compose/docker_git_build.sh
            ./docker-compose/docker_git_build.sh
          EOF
